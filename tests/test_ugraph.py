#!/usr/bin/python3

import os
import sys

sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))
import topologist.ugraph as ugraph


def test_graph_cycle():
    graph = ugraph.graph()
    graph.graph = {
        "1.4466087818145752__3.225928783416748__0.0": [
            "2.756314754486084__-2.088371753692627__0.0",
            None,
        ],
        "6.636378288269043__4.081480979919434__0.0": [
            "1.4466087818145752__3.225928783416748__0.0",
            None,
        ],
        "8.317962646484375__-2.2967023849487305__0.0": [
            "6.636378288269043__4.081480979919434__0.0",
            None,
        ],
        "3.0601770877838135__-3.321331262588501__0.0": [
            "8.317962646484375__-2.2967023849487305__0.0",
            None,
        ],
        "2.756314754486084__-2.088371753692627__0.0": [
            "3.0601770877838135__-3.321331262588501__0.0",
            None,
        ],
    }

    assert not graph.is_simple_cycle()

    paths = graph.find_paths()
    assert len(paths) == 1
    assert paths[0].is_simple_cycle()


def test_graph_starts():
    graph = ugraph.graph()
    graph.graph = {
        "1.4466087818145752__3.225928783416748__0.0": [
            "2.756314754486084__-2.088371753692627__0.0",
            None,
        ],
        "6.636378288269043__4.081480979919434__0.0": [
            "1.4466087818145752__3.225928783416748__0.0",
            None,
        ],
        "8.317962646484375__-2.2967023849487305__0.0": [
            "6.636378288269043__4.081480979919434__0.0",
            None,
        ],
        "3.0601770877838135__-3.321331262588501__0.0": [
            "8.317962646484375__-2.2967023849487305__0.0",
            None,
        ],
        "2.756314754486084__-2.088371753692627__0.0": [
            "3.0601770877838135__-3.321331262588501__0.0",
            None,
        ],
    }

    assert len(graph.starts()) == 5
    assert len(graph.ends()) == 5
